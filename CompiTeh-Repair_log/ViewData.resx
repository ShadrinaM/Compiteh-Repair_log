<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        94ttCKORT1MAAAAASUVORK5CYII=
</value>
  </data>
</root>